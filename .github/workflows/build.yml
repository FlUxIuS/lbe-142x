name: Build Windows & GNU/Linux
on:
 push:
   branches: [ main ]
   tags:
     - 'v*'
 pull_request:
   branches: [ main ]
jobs:
 build-windows:
   runs-on: windows-latest
   steps:
   - uses: actions/checkout@v4
   
   - name: Set up MSVC
     uses: microsoft/setup-msbuild@v2
     
   - name: Set up CMake
     uses: lukka/get-cmake@latest
     
   - name: Download and extract libusb
     run: |
       Invoke-WebRequest -Uri "https://github.com/libusb/libusb/releases/download/v1.0.27/libusb-1.0.27.7z" -OutFile "libusb.7z"
       7z x libusb.7z -olibusb
     
   - name: Configure CMake
     run: cmake -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -A x64
     
   - name: Build
     run: cmake --build ${{github.workspace}}/build --config Release

   - name: Get version
     id: get_version
     run: |
       if ("${{ github.ref_type }}" -eq "tag") {
         $VERSION="${{ github.ref_name }}"
         $VERSION=$VERSION.Replace(".", "_")
         echo "version=$VERSION" >> $env:GITHUB_OUTPUT
       } else {
         echo "version=dev" >> $env:GITHUB_OUTPUT
       }
     shell: pwsh
     
   - name: Upload artifact
     uses: actions/upload-artifact@v4
     with:
       name: lbe-142x_${{ steps.get_version.outputs.version }}-windows
       path: |
         ${{github.workspace}}/build/bin/Release/lbe-142x.exe
         ${{github.workspace}}/build/bin/Release/libusb-1.0.dll

 build-linux:
   strategy:
     matrix:
       os: [ubuntu-22.04, ubuntu-24.04]
   runs-on: ${{ matrix.os }}
   steps:
   - uses: actions/checkout@v4
   
   - name: Set up CMake
     uses: lukka/get-cmake@latest
     
   - name: Install dependencies
     run: |
       sudo apt-get update
       sudo apt-get install -y libudev-dev libusb-1.0-0-dev
       
   - name: Configure CMake
     run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
     
   - name: Build
     run: cmake --build ${{github.workspace}}/build

   - name: Get version
     id: get_version
     run: |
       if [[ "${{ github.ref_type }}" == "tag" ]]; then
         VERSION="${{ github.ref_name }}"
         VERSION="${VERSION//./\_}"
         echo "version=$VERSION" >> $GITHUB_OUTPUT
       else
         echo "version=dev" >> $GITHUB_OUTPUT
       fi
     shell: bash

   - name: Upload artifact
     uses: actions/upload-artifact@v4
     with:
       name: lbe-142x_${{ steps.get_version.outputs.version }}-${{ matrix.os }}
       path: ${{github.workspace}}/build/bin/lbe-142x
